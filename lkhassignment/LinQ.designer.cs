#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lkhassignment
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LKH")]
	public partial class LinQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertReservation(Reservation instance);
    partial void UpdateReservation(Reservation instance);
    partial void DeleteReservation(Reservation instance);
    partial void Insertdriver(driver instance);
    partial void Updatedriver(driver instance);
    partial void Deletedriver(driver instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    #endregion
		
		public LinQDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Reservation> Reservations
		{
			get
			{
				return this.GetTable<Reservation>();
			}
		}
		
		public System.Data.Linq.Table<driver> drivers
		{
			get
			{
				return this.GetTable<driver>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservation")]
	public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReservationId;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _time;
		
		private string _pickupAddress;
		
		private string _Destination;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Status;
		
		private string _ScheduleId;
		
		private string _CustId;
		
		private EntityRef<Schedule> _Schedule;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservationIdChanging(string value);
    partial void OnReservationIdChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnpickupAddressChanging(string value);
    partial void OnpickupAddressChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnScheduleIdChanging(string value);
    partial void OnScheduleIdChanged();
    partial void OnCustIdChanging(string value);
    partial void OnCustIdChanged();
    #endregion
		
		public Reservation()
		{
			this._Schedule = default(EntityRef<Schedule>);
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReservationId
		{
			get
			{
				return this._ReservationId;
			}
			set
			{
				if ((this._ReservationId != value))
				{
					this.OnReservationIdChanging(value);
					this.SendPropertyChanging();
					this._ReservationId = value;
					this.SendPropertyChanged("ReservationId");
					this.OnReservationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(10)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pickupAddress", DbType="NVarChar(30)")]
		public string pickupAddress
		{
			get
			{
				return this._pickupAddress;
			}
			set
			{
				if ((this._pickupAddress != value))
				{
					this.OnpickupAddressChanging(value);
					this.SendPropertyChanging();
					this._pickupAddress = value;
					this.SendPropertyChanged("pickupAddress");
					this.OnpickupAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(30)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="SmallMoney")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="NVarChar(4)")]
		public string ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustId", DbType="NVarChar(4)")]
		public string CustId
		{
			get
			{
				return this._CustId;
			}
			set
			{
				if ((this._CustId != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustIdChanging(value);
					this.SendPropertyChanging();
					this._CustId = value;
					this.SendPropertyChanged("CustId");
					this.OnCustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_Reservation", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="scheduleId", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._ScheduleId = value.scheduleId;
					}
					else
					{
						this._ScheduleId = default(string);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_Reservation", Storage="_customer", ThisKey="CustId", OtherKey="cust_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._CustId = value.cust_id;
					}
					else
					{
						this._CustId = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.driver")]
	public partial class driver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _driver_id;
		
		private string _driver_username;
		
		private string _driver_password;
		
		private string _driver_full_name;
		
		private string _driver_ic_no;
		
		private string _driver_tel_no;
		
		private string _driver_email;
		
		private string _driver_address;
		
		private System.Nullable<System.DateTime> _driver_hire_date;
		
		private System.Nullable<System.DateTime> _driver_dob;
		
		private string _driver_role;
		
		private string _driver_taxi_company;
		
		private System.Nullable<System.DateTime> _driver_license_expiry_date;
		
		private string _driver_taxi_plate_no;
		
		private EntitySet<Schedule> _Schedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondriver_idChanging(string value);
    partial void Ondriver_idChanged();
    partial void Ondriver_usernameChanging(string value);
    partial void Ondriver_usernameChanged();
    partial void Ondriver_passwordChanging(string value);
    partial void Ondriver_passwordChanged();
    partial void Ondriver_full_nameChanging(string value);
    partial void Ondriver_full_nameChanged();
    partial void Ondriver_ic_noChanging(string value);
    partial void Ondriver_ic_noChanged();
    partial void Ondriver_tel_noChanging(string value);
    partial void Ondriver_tel_noChanged();
    partial void Ondriver_emailChanging(string value);
    partial void Ondriver_emailChanged();
    partial void Ondriver_addressChanging(string value);
    partial void Ondriver_addressChanged();
    partial void Ondriver_hire_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondriver_hire_dateChanged();
    partial void Ondriver_dobChanging(System.Nullable<System.DateTime> value);
    partial void Ondriver_dobChanged();
    partial void Ondriver_roleChanging(string value);
    partial void Ondriver_roleChanged();
    partial void Ondriver_taxi_companyChanging(string value);
    partial void Ondriver_taxi_companyChanged();
    partial void Ondriver_license_expiry_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondriver_license_expiry_dateChanged();
    partial void Ondriver_taxi_plate_noChanging(string value);
    partial void Ondriver_taxi_plate_noChanged();
    #endregion
		
		public driver()
		{
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_id", DbType="NVarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string driver_id
		{
			get
			{
				return this._driver_id;
			}
			set
			{
				if ((this._driver_id != value))
				{
					this.Ondriver_idChanging(value);
					this.SendPropertyChanging();
					this._driver_id = value;
					this.SendPropertyChanged("driver_id");
					this.Ondriver_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_username", DbType="NVarChar(30)")]
		public string driver_username
		{
			get
			{
				return this._driver_username;
			}
			set
			{
				if ((this._driver_username != value))
				{
					this.Ondriver_usernameChanging(value);
					this.SendPropertyChanging();
					this._driver_username = value;
					this.SendPropertyChanged("driver_username");
					this.Ondriver_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_password", DbType="NVarChar(50)")]
		public string driver_password
		{
			get
			{
				return this._driver_password;
			}
			set
			{
				if ((this._driver_password != value))
				{
					this.Ondriver_passwordChanging(value);
					this.SendPropertyChanging();
					this._driver_password = value;
					this.SendPropertyChanged("driver_password");
					this.Ondriver_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_full_name", DbType="NVarChar(30)")]
		public string driver_full_name
		{
			get
			{
				return this._driver_full_name;
			}
			set
			{
				if ((this._driver_full_name != value))
				{
					this.Ondriver_full_nameChanging(value);
					this.SendPropertyChanging();
					this._driver_full_name = value;
					this.SendPropertyChanged("driver_full_name");
					this.Ondriver_full_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_ic_no", DbType="NVarChar(12)")]
		public string driver_ic_no
		{
			get
			{
				return this._driver_ic_no;
			}
			set
			{
				if ((this._driver_ic_no != value))
				{
					this.Ondriver_ic_noChanging(value);
					this.SendPropertyChanging();
					this._driver_ic_no = value;
					this.SendPropertyChanged("driver_ic_no");
					this.Ondriver_ic_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_tel_no", DbType="NVarChar(14)")]
		public string driver_tel_no
		{
			get
			{
				return this._driver_tel_no;
			}
			set
			{
				if ((this._driver_tel_no != value))
				{
					this.Ondriver_tel_noChanging(value);
					this.SendPropertyChanging();
					this._driver_tel_no = value;
					this.SendPropertyChanged("driver_tel_no");
					this.Ondriver_tel_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_email", DbType="NVarChar(50)")]
		public string driver_email
		{
			get
			{
				return this._driver_email;
			}
			set
			{
				if ((this._driver_email != value))
				{
					this.Ondriver_emailChanging(value);
					this.SendPropertyChanging();
					this._driver_email = value;
					this.SendPropertyChanged("driver_email");
					this.Ondriver_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_address", DbType="NVarChar(200)")]
		public string driver_address
		{
			get
			{
				return this._driver_address;
			}
			set
			{
				if ((this._driver_address != value))
				{
					this.Ondriver_addressChanging(value);
					this.SendPropertyChanging();
					this._driver_address = value;
					this.SendPropertyChanged("driver_address");
					this.Ondriver_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_hire_date", DbType="Date")]
		public System.Nullable<System.DateTime> driver_hire_date
		{
			get
			{
				return this._driver_hire_date;
			}
			set
			{
				if ((this._driver_hire_date != value))
				{
					this.Ondriver_hire_dateChanging(value);
					this.SendPropertyChanging();
					this._driver_hire_date = value;
					this.SendPropertyChanged("driver_hire_date");
					this.Ondriver_hire_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_dob", DbType="Date")]
		public System.Nullable<System.DateTime> driver_dob
		{
			get
			{
				return this._driver_dob;
			}
			set
			{
				if ((this._driver_dob != value))
				{
					this.Ondriver_dobChanging(value);
					this.SendPropertyChanging();
					this._driver_dob = value;
					this.SendPropertyChanged("driver_dob");
					this.Ondriver_dobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_role", DbType="NVarChar(20)")]
		public string driver_role
		{
			get
			{
				return this._driver_role;
			}
			set
			{
				if ((this._driver_role != value))
				{
					this.Ondriver_roleChanging(value);
					this.SendPropertyChanging();
					this._driver_role = value;
					this.SendPropertyChanged("driver_role");
					this.Ondriver_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_taxi_company", DbType="NVarChar(30)")]
		public string driver_taxi_company
		{
			get
			{
				return this._driver_taxi_company;
			}
			set
			{
				if ((this._driver_taxi_company != value))
				{
					this.Ondriver_taxi_companyChanging(value);
					this.SendPropertyChanging();
					this._driver_taxi_company = value;
					this.SendPropertyChanged("driver_taxi_company");
					this.Ondriver_taxi_companyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_license_expiry_date", DbType="Date")]
		public System.Nullable<System.DateTime> driver_license_expiry_date
		{
			get
			{
				return this._driver_license_expiry_date;
			}
			set
			{
				if ((this._driver_license_expiry_date != value))
				{
					this.Ondriver_license_expiry_dateChanging(value);
					this.SendPropertyChanging();
					this._driver_license_expiry_date = value;
					this.SendPropertyChanged("driver_license_expiry_date");
					this.Ondriver_license_expiry_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_taxi_plate_no", DbType="NVarChar(7)")]
		public string driver_taxi_plate_no
		{
			get
			{
				return this._driver_taxi_plate_no;
			}
			set
			{
				if ((this._driver_taxi_plate_no != value))
				{
					this.Ondriver_taxi_plate_noChanging(value);
					this.SendPropertyChanging();
					this._driver_taxi_plate_no = value;
					this.SendPropertyChanged("driver_taxi_plate_no");
					this.Ondriver_taxi_plate_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="driver_Schedule", Storage="_Schedules", ThisKey="driver_id", OtherKey="driverId")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.driver = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.driver = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _scheduleId;
		
		private string _status;
		
		private string _driverId;
		
		private EntitySet<Reservation> _Reservations;
		
		private EntityRef<driver> _driver;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnscheduleIdChanging(string value);
    partial void OnscheduleIdChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OndriverIdChanging(string value);
    partial void OndriverIdChanged();
    #endregion
		
		public Schedule()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			this._driver = default(EntityRef<driver>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scheduleId", DbType="NVarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string scheduleId
		{
			get
			{
				return this._scheduleId;
			}
			set
			{
				if ((this._scheduleId != value))
				{
					this.OnscheduleIdChanging(value);
					this.SendPropertyChanging();
					this._scheduleId = value;
					this.SendPropertyChanged("scheduleId");
					this.OnscheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(10)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverId", DbType="NVarChar(4)")]
		public string driverId
		{
			get
			{
				return this._driverId;
			}
			set
			{
				if ((this._driverId != value))
				{
					if (this._driver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndriverIdChanging(value);
					this.SendPropertyChanging();
					this._driverId = value;
					this.SendPropertyChanged("driverId");
					this.OndriverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_Reservation", Storage="_Reservations", ThisKey="scheduleId", OtherKey="ScheduleId")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="driver_Schedule", Storage="_driver", ThisKey="driverId", OtherKey="driver_id", IsForeignKey=true)]
		public driver driver
		{
			get
			{
				return this._driver.Entity;
			}
			set
			{
				driver previousValue = this._driver.Entity;
				if (((previousValue != value) 
							|| (this._driver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._driver.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._driver.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._driverId = value.driver_id;
					}
					else
					{
						this._driverId = default(string);
					}
					this.SendPropertyChanged("driver");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cust_id;
		
		private string _cust_username;
		
		private string _cust_password;
		
		private string _cust_full_name;
		
		private string _cust_tel_no;
		
		private string _cust_email;
		
		private string _cust_address;
		
		private System.Nullable<System.DateTime> _cust_join_date;
		
		private System.Nullable<System.DateTime> _cust_dob;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncust_idChanging(string value);
    partial void Oncust_idChanged();
    partial void Oncust_usernameChanging(string value);
    partial void Oncust_usernameChanged();
    partial void Oncust_passwordChanging(string value);
    partial void Oncust_passwordChanged();
    partial void Oncust_full_nameChanging(string value);
    partial void Oncust_full_nameChanged();
    partial void Oncust_tel_noChanging(string value);
    partial void Oncust_tel_noChanged();
    partial void Oncust_emailChanging(string value);
    partial void Oncust_emailChanged();
    partial void Oncust_addressChanging(string value);
    partial void Oncust_addressChanged();
    partial void Oncust_join_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncust_join_dateChanged();
    partial void Oncust_dobChanging(System.Nullable<System.DateTime> value);
    partial void Oncust_dobChanged();
    #endregion
		
		public customer()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="NVarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_username", DbType="NVarChar(30)")]
		public string cust_username
		{
			get
			{
				return this._cust_username;
			}
			set
			{
				if ((this._cust_username != value))
				{
					this.Oncust_usernameChanging(value);
					this.SendPropertyChanging();
					this._cust_username = value;
					this.SendPropertyChanged("cust_username");
					this.Oncust_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_password", DbType="NVarChar(50)")]
		public string cust_password
		{
			get
			{
				return this._cust_password;
			}
			set
			{
				if ((this._cust_password != value))
				{
					this.Oncust_passwordChanging(value);
					this.SendPropertyChanging();
					this._cust_password = value;
					this.SendPropertyChanged("cust_password");
					this.Oncust_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_full_name", DbType="NVarChar(30)")]
		public string cust_full_name
		{
			get
			{
				return this._cust_full_name;
			}
			set
			{
				if ((this._cust_full_name != value))
				{
					this.Oncust_full_nameChanging(value);
					this.SendPropertyChanging();
					this._cust_full_name = value;
					this.SendPropertyChanged("cust_full_name");
					this.Oncust_full_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_tel_no", DbType="NVarChar(14)")]
		public string cust_tel_no
		{
			get
			{
				return this._cust_tel_no;
			}
			set
			{
				if ((this._cust_tel_no != value))
				{
					this.Oncust_tel_noChanging(value);
					this.SendPropertyChanging();
					this._cust_tel_no = value;
					this.SendPropertyChanged("cust_tel_no");
					this.Oncust_tel_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_email", DbType="NVarChar(30)")]
		public string cust_email
		{
			get
			{
				return this._cust_email;
			}
			set
			{
				if ((this._cust_email != value))
				{
					this.Oncust_emailChanging(value);
					this.SendPropertyChanging();
					this._cust_email = value;
					this.SendPropertyChanged("cust_email");
					this.Oncust_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_address", DbType="NVarChar(200)")]
		public string cust_address
		{
			get
			{
				return this._cust_address;
			}
			set
			{
				if ((this._cust_address != value))
				{
					this.Oncust_addressChanging(value);
					this.SendPropertyChanging();
					this._cust_address = value;
					this.SendPropertyChanged("cust_address");
					this.Oncust_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_join_date", DbType="Date")]
		public System.Nullable<System.DateTime> cust_join_date
		{
			get
			{
				return this._cust_join_date;
			}
			set
			{
				if ((this._cust_join_date != value))
				{
					this.Oncust_join_dateChanging(value);
					this.SendPropertyChanging();
					this._cust_join_date = value;
					this.SendPropertyChanged("cust_join_date");
					this.Oncust_join_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_dob", DbType="Date")]
		public System.Nullable<System.DateTime> cust_dob
		{
			get
			{
				return this._cust_dob;
			}
			set
			{
				if ((this._cust_dob != value))
				{
					this.Oncust_dobChanging(value);
					this.SendPropertyChanging();
					this._cust_dob = value;
					this.SendPropertyChanged("cust_dob");
					this.Oncust_dobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_Reservation", Storage="_Reservations", ThisKey="cust_id", OtherKey="CustId")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
}
#pragma warning restore 1591
